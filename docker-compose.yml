version: "3.9"
services:
  ui:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: "ui"
        LIBRARIES: "./pkg/token ./pkg/auth"
        PORT: "8080"
    networks:
      - app-network
    ports:
      - "8080:8080"
    environment:
      - TOKEN_SECRET=secret
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  chat:
    build:
      context: .
      args:
        SERVICE_NAME: "chat"
        PORT: "8082"
        LIBRARIES: "./pkg/token ./pkg/auth ./pkg/message-queue" 
    networks:
      - app-network
    ports:
      - "8082:8082"
    environment:
      - TOKEN_SECRET=secret
      - KAFKA_URL=kafka:9092
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      - kafka

  auth:
    build:
      context: .
      args:
        SERVICE_NAME: "auth"
        LIBRARIES: "./pkg/token"
        PORT: "8081"
    networks:
      - app-network
    ports:
      - "8081:8081"
    environment:
      - TOKEN_SECRET=secret
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    
  persistent:
    build:
      context: .
      args:
        SERVICE_NAME: "persistent"
        LIBRARIES: "./pkg/db ./pkg/message-queue"
        PORT: "8083"
    networks:
      - app-network
    ports:
      - "8083:8083"
    environment:
      - KAFKA_URL=kafka:9092
      - DB_URL=host=localhost user=postgres password=password dbname=appdb port=5432 sslmode=disable TimeZone=Asia/Dubai
    depends_on:
      - postgres
      - kafka
      

  gateway:
    build:
      context: ./gateway
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      - ui
      - auth
      - chat

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    networks:
      - app-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    networks:
      - app-network
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:15
    networks:
      - app-network
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: appdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./seed.sql:/docker-entrypoint-initdb.d/seed.sql

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
